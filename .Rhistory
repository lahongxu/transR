?nchar
?gsub
library(Biostrings)
dna1 <- DNAString("ATGtacacagctaaaGAacggauuuctacacatGAAGgtagagaggccacagagagcacguag")
dna1 <- RNAString("ATGtacacagctaaaGAacggauuuctacacatGAAGgtagagaggccacagagagcacguag")
code <- c("ATGtacacagctaaaGAacggauuuctacacatGAAGgtagagaggccacagagagcacguag")
toupper(code)
code <- toupper(code)
?gsub
gsub("U","T",code )
dna1 <- RNAString(code)
dna1 <- DNAString(code)
code
code <- gsub("U","T",code)
code
dna1 <- DNAString(code)
translate(dna1)
View(dna1)
dna1@metadata
dna1@length
dna1@shared@.link_to_cached_object
dna1@shared
dna1
codon <- read.table("codon.txt", header = T)
getwd
codon <- read.table("codon.txt", header = T)
codon <- read.table("data/codon.txt", header = T)
View(codon)
codon <- read.table("data/codon.txt", header = F)
View(codon)
codon <- as.matrix(codon[,c(V1,V3)])
codon <- as.matrix(codon[ ,c(V1,V3)])
codon <- codon[, c(V1,V3)]
codon <- codon[,c(V1,V3)]
codon <- codon[ ,c(V1,V3)]
View(codon)
codon <- read.table("data/codon.txt", header = F, as.is = T)
codon <- codon[ ,c(V1,V3)]
V1
codon <- read.table("data/codon.txt", header = F, as.is = T)[ ,c(1,3)]
View(codon)
View(codon)
dna <- c("ATGtacacagctaaaGAacggauuuctacacatGAAGgtagagaggccacagagagcacguag")
dna <- toupper(dna)
dna <- gsub("U","T",dna)
dna
num.codons <- nchar(dna/3)
num.codons <- nchar(dna)/3
pos.codon <- seq(from=1, by=3, length.out = num.codons)
results <- c()
starts <- seq(from=1, by=3, length.out = num.codons)
seq(1:6)
seq(1:6,by=3)
seq(1:6,by=2)
?seq
seq(1,9 by=3)
seq(1,9, by=3)
starts <- seq(from=1, by=3, length.out = num.codons)
dna <- c("ATGtacacagctaaaGAacggauuuctacacatGAAGgtagagaggccacagagagcacguag")
dna <- toupper(dna)
dna <- gsub("U","T",dna)
dna
num.codons <- nchar(dna)/3
starts <- seq(from=1, by=3, length.out = num.codons)
results <- c()
coden <- list()
codons <- list()
table <- read.table("data/codon.txt", header = F, as.is = T)[ ,c(1,3)]
table <- read.table("data/codon.txt", header = F, as.is = T)[ ,c(1,3)]
dna <- c("ATGtacacagctaaaGAacggauuuctacacatGAAGgtagagaggccacagagagcacguag")
dna <- toupper(dna)
dna <- gsub("U","T",dna)
dna
num.codons <- nchar(dna)/3
starts <- seq(from=1, by=3, length.out = num.codons)
results <- c()
codons <- list()
for(i in 1:num.codons){
codons <- substring(starts[i],starts[i]+2, dna)
}
for(i in 1:length(codons)){
results[i] <- table[table[,1]==codons[[i],2]]
}
results[i] <- table[table[,1]==codons[[i]],2]
for(i in 1:length(codons)){
results[i] <- table[table[,1]==codons[[i]],2]
}
table <- read.table("data/codon.txt", header = F, as.is = T)[ ,c(1,3)]
dna <- c("ATGtacacagctaaaGAacggauuuctacacatGAAGgtagagaggccacagagagcacguag")
dna <- toupper(dna)
dna <- gsub("U","T",dna)
dna
num.codons <- nchar(dna)/3
starts <- seq(from=1, by=3, length.out = num.codons)
results <- c()
codons <- list()
for(i in 1:num.codons){
codons <- substring(starts[i],starts[i]+2, dna)
}
substring(starts[1],starts[1]+2, dna)
codons <- substring(starts[i],starts[i+2], dna)
for(i in 1:num.codons){
codons <- substring(starts[i],starts[i+2], dna)
}
starts[1]+2
for(i in 1:num.codons){
codons <- substring(dna,starts[i],starts[i+2])
}
codons <- list()
for(i in 1:num.codons){
codons <- substring(dna,starts[i],starts[i+2])
}
codons <- list()
for(i in 1:num.codons){
codons <- substring(dna,starts[i],starts[i]+2)
}
codons
codons <- list()
codons[i] <- substring(dna,starts[i],starts[i]+2)
codons <- list()
for(i in 1:num.codons){
codons[i] <- substring(dna,starts[i],starts[i]+2)
}
View(codons)
for(i in 1:length(codons)){
results[i] <- table[table[,1]==codons[[i]],2]
}
codons[1]
codons[[1]]
translate <- function(dna){
table <- read.table("data/codon.txt", header = F, as.is = T)[ ,c(1,3)]
dna <- toupper(dna)
dna <- gsub("U","T",dna)
dna
num.codons <- nchar(dna)/3
starts <- seq(from=1, by=3, length.out = num.codons)
results <- c()
codons <- list()
for(i in 1:num.codons){
codons[i] <- substring(dna,starts[i],starts[i]+2)
}
for(i in 1:length(codons)){
results[i] <- table[table[,1]==codons[[i]],2]
}
return(paste(unlist(results),sep = "", collapse = ""))
}
# dna1 <- DNAString(code)
# translate(dna1)
dna <- c("ATGtacacagctaaaGAacggauuuctacacatGAAGgtagagaggccacagagagcacguag")
translate(dna)
library(devtools)
document()
check()
translate(dna)
library(devtools)
document()
check()
library(devtools)
document()
check()
library(devtools)
document()
check()
